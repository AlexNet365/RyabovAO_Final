
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	//Формируем основу для движений
	СформироватьДвижения();
	
	//Уточняем (дополняем) движения
	РассчитатьОклад();
	РассчитатьОтпуск();
	РассчитатьУдержания();
	
	//Заполняем остальные движения
	ДвиженияВзаиморасчетыССотрудниками();
	ДвиженияУчетОтпусков();
	
КонецПроцедуры      

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвижения()
	
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	Движения.ВКМ_ДополнительныеНачисления.Записывать = Истина;
	Движения.ВКМ_Удержания.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_НачислениеЗарплатыНачисления.Сотрудник КАК Сотрудник,
		|	ВКМ_НачислениеЗарплатыНачисления.ВидРасчета КАК ВидРасчета,
		|	ВКМ_НачислениеЗарплатыНачисления.ДатаНачала КАК ДатаНачала,
		|	ВКМ_НачислениеЗарплатыНачисления.ДатаОкончания КАК ДатаОкончания,
		|	ВКМ_НачислениеЗарплатыНачисления.График КАК График
		|ПОМЕСТИТЬ ВТ_Док
		|ИЗ
		|	Документ.ВКМ_НачислениеЗарплаты.Начисления КАК ВКМ_НачислениеЗарплатыНачисления
		|ГДЕ
		|	ВКМ_НачислениеЗарплатыНачисления.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник КАК Сотрудник,
		|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот КАК СуммаКОплатеОборот
		|ПОМЕСТИТЬ ВТ_ВыпРаб
		|ИЗ
		|	РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&ДатаНачало, &ДатаОкончания, , ) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот КАК ПроцентОтРабот
		|ПОМЕСТИТЬ ВТ_Процент
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата, ) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Док.Сотрудник КАК Сотрудник,
		|	ВТ_Док.ВидРасчета КАК ВидРасчета,
		|	ВТ_Док.ДатаНачала КАК ДатаНачала,
		|	ВТ_Док.ДатаОкончания КАК ДатаОкончания,
		|	ВТ_Док.График КАК График,
		|	ВТ_Процент.ПроцентОтРабот КАК ПроцентОтРабот,
		|	ВТ_ВыпРаб.СуммаКОплатеОборот КАК СуммаКОплатеОборот
		|ИЗ
		|	ВТ_Док КАК ВТ_Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВыпРаб КАК ВТ_ВыпРаб
		|		ПО ВТ_Док.Сотрудник = ВТ_ВыпРаб.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Процент КАК ВТ_Процент
		|		ПО ВТ_Док.Сотрудник = ВТ_Процент.Сотрудник";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("ДатаНачало", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл

		Если ТипЗнч(Выборка.ВидРасчета) = Тип("ПланВидовРасчетаСсылка.ВКМ_ОсновныеНачисления") Тогда     
			
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.ПериодРегистрации = НачалоМесяца(Дата);
			Движение.ПериодДействияНачало = Выборка.ДатаНачала;
			Движение.ПериодДействияКонец = Выборка.ДатаОкончания;
			Движение.ВидРасчета = Выборка.ВидРасчета;
			Движение.Сотрудник = Выборка.Сотрудник;
			Движение.ГрафикРаботы = Выборка.График;
			
			Если Выборка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпускные Тогда
				Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Выборка.ДатаНачала, -12));
				Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(Выборка.ДатаОкончания, -1));
			КонецЕсли; 
			
		КонецЕсли;
		
		Если ТипЗнч(Выборка.ВидРасчета) = Тип("ПланВидовРасчетаСсылка.ВКМ_ДополнительныеНачисления") Тогда
			Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
			Движение.ПериодРегистрации = НачалоМесяца(Дата);
			Движение.ВидРасчета = Выборка.ВидРасчета;
			Движение.Сотрудник = Выборка.Сотрудник;
			Движение.Процент = Выборка.ПроцентОтРабот;
			Движение.Результат = Выборка.СуммаКОплатеОборот;
		КонецЕсли;

	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВКМ_НачислениеЗарплатыНачисления.Сотрудник КАК Сотрудник
		|ИЗ
		|	Документ.ВКМ_НачислениеЗарплаты.Начисления КАК ВКМ_НачислениеЗарплатыНачисления
		|ГДЕ
		|	ВКМ_НачислениеЗарплатыНачисления.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_НачислениеЗарплатыНачисления.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_ДополнительныеНачисления.Записать();
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры 

 Процедура РассчитатьОклад()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия, 0) КАК План,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад КАК Оклад
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
		|			Регистратор = &Ссылка
		|				И ВидРасчета = &ВидРасчета) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(
		|				&Период,
		|				Сотрудник В
		|					(ВЫБРАТЬ
		|						ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник
		|					ИЗ
		|						РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|					ГДЕ
		|						ВКМ_ОсновныеНачисления.Регистратор = &Регистратор
		|						И ВКМ_ОсновныеНачисления.ВидРасчета = &ВидРасчета)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник";
	
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл

		Если Выборка.План = 0 Тогда
			ОбщегоНазначения.СообщитьПользователю("Не заполнен график работы");
			Прервать;
		КонецЕсли;
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Движение.Результат = Выборка.Оклад * Выборка.Факт / Выборка.План;
		Движение.ОтработаноЧасов = Выборка.Факт;
		
	КонецЦикла;

	Движения.ВКМ_ОсновныеНачисления.Записать( , Истина);

КонецПроцедуры

Процедура РассчитатьОтпуск()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК РезультатБаза,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.РезультатБаза, 0) КАК РезультатБазаДоп,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ОтработаноЧасовБаза, 0) КАК ОтработаноЧасовБаза,
		|	ВКМ_ОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
		|	ВКМ_ОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				,
		|				Регистратор = &Регистратор
		|					И ВидРасчета = &ВидРасчета) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				,
		|				Регистратор = &Регистратор
		|					И ВидРасчета = &ВидРасчета) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НомерСтроки
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.ВидРасчета = &ВидРасчета
		|	И ВКМ_ОсновныеНачисления.Регистратор = &Регистратор"; 
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпускные);
	Запрос.УстановитьПараметр("Регистратор", Ссылка); 
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

		Движение = Движения.ВКМ_ОсновныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1];  
		
		ДнейОтработано = ВыборкаДетальныеЗаписи.ОтработаноЧасовБаза / 8;
		ДнейОтпуска = (НачалоДня(ВыборкаДетальныеЗаписи.ПериодДействияКонец) - НачалоДня(ВыборкаДетальныеЗаписи.ПериодДействияНачало)) / (60 * 60
			* 24); 
			
		Если ДнейОтработано = 0 Тогда 
			Движение.Результат = 0;
		Иначе		
			Движение.Результат = (ВыборкаДетальныеЗаписи.РезультатБаза + ВыборкаДетальныеЗаписи.РезультатБазаДоп) / ДнейОтработано * ДнейОтпуска;
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать( , Истина);
 
 КонецПроцедуры
 
Процедура РассчитатьУдержания()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_Удержания.НомерСтроки КАК НомерСтроки,
		|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РезультатБаза КАК РезультатБаза,
		|	ВКМ_Удержания.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТ_ОснУдерж
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				&Разрезы,
		|				Регистратор = &Регистратор
		|					И ВидРасчета = &ВидРасчета) КАК ВКМ_УдержанияБазаВКМ_ОсновныеНачисления
		|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки
		|ГДЕ
		|	ВКМ_Удержания.Регистратор = &Регистратор
		|	И ВКМ_Удержания.ВидРасчета = &ВидРасчета
		|	И ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РегистраторРазрез = &Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_Удержания.НомерСтроки КАК НомерСтроки,
		|	ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РезультатБаза КАК РезультатБаза,
		|	ВКМ_Удержания.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТ_ДопУдерж
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ДополнительныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				&Разрезы,
		|				Регистратор = &Регистратор
		|					И ВидРасчета = &ВидРасчета) КАК ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления
		|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.НомерСтроки
		|ГДЕ
		|	ВКМ_Удержания.Регистратор = &Регистратор
		|	И ВКМ_Удержания.ВидРасчета = &ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ОснУдерж.Сотрудник КАК Сотрудник,
		|	ВТ_ОснУдерж.НомерСтроки КАК НомерСтроки,
		|	СУММА(ЕСТЬNULL(ВТ_ОснУдерж.РезультатБаза, 0)) КАК Результат1,
		|	СУММА(ЕСТЬNULL(ВТ_ДопУдерж.РезультатБаза, 0)) КАК Результат2
		|ИЗ
		|	ВТ_ОснУдерж КАК ВТ_ОснУдерж
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДопУдерж КАК ВТ_ДопУдерж
		|		ПО ВТ_ОснУдерж.НомерСтроки = ВТ_ДопУдерж.НомерСтроки
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ОснУдерж.Сотрудник,
		|	ВТ_ОснУдерж.НомерСтроки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ДопУдерж.Сотрудник,
		|	ВТ_ДопУдерж.НомерСтроки,
		|	ЕСТЬNULL(ВТ_ОснУдерж.РезультатБаза, 0),
		|	СУММА(ЕСТЬNULL(ВТ_ДопУдерж.РезультатБаза, 0))
		|ИЗ
		|	ВТ_ДопУдерж КАК ВТ_ДопУдерж
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОснУдерж КАК ВТ_ОснУдерж
		|		ПО ВТ_ДопУдерж.НомерСтроки = ВТ_ОснУдерж.НомерСтроки
		|ГДЕ
		|	ВТ_ДопУдерж.РезультатБаза > 0
		|	И ВТ_ОснУдерж.РезультатБаза ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ДопУдерж.Сотрудник,
		|	ВТ_ДопУдерж.НомерСтроки,
		|	ЕСТЬNULL(ВТ_ОснУдерж.РезультатБаза, 0)";  

	Разрезы = Новый Массив;
	Разрезы.Добавить("Регистратор");
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_Удержания.НДФЛ);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("Разрезы", Разрезы);     
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = Движения.ВКМ_Удержания[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		Движение.Результат = (ВыборкаДетальныеЗаписи.Результат1 + ВыборкаДетальныеЗаписи.Результат2) * 13 / 100;
	КонецЦикла; 
	
	Движения.ВКМ_Удержания.Записать( , Истина);
	
	
КонецПроцедуры	 

Процедура ДвиженияВзаиморасчетыССотрудниками()  
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	СУММА(ВКМ_ОсновныеНачисления.Результат) КАК Результат,
		|	ВКМ_ОсновныеНачисления.ВидРасчета КАК ВидРасчета
		|ПОМЕСТИТЬ ВТ_1
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Регистратор
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОсновныеНачисления.Сотрудник,
		|	ВКМ_ОсновныеНачисления.ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_ДополнительныеНачисления.Сотрудник КАК СотрудникДоп,
		|	СУММА(ВКМ_ДополнительныеНачисления.Результат) КАК РезультатДоп,
		|	ВКМ_ДополнительныеНачисления.ВидРасчета КАК ВидРасчетаДоп
		|ПОМЕСТИТЬ ВТ_2
		|ИЗ
		|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
		|ГДЕ
		|	ВКМ_ДополнительныеНачисления.Регистратор = &Регистратор
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ДополнительныеНачисления.Сотрудник,
		|	ВКМ_ДополнительныеНачисления.ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_НачислениеЗарплатыНачисления.Сотрудник КАК Сотрудник,
		|	ВТ_1.Результат КАК Результат,
		|	ВТ_2.РезультатДоп КАК РезультатДоп,
		|	ВКМ_НачислениеЗарплатыНачисления.ВидРасчета КАК ВидРасчета
		|ИЗ
		|	Документ.ВКМ_НачислениеЗарплаты.Начисления КАК ВКМ_НачислениеЗарплатыНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_1 КАК ВТ_1
		|		ПО ВКМ_НачислениеЗарплатыНачисления.Сотрудник = ВТ_1.Сотрудник
		|			И ВКМ_НачислениеЗарплатыНачисления.ВидРасчета = ВТ_1.ВидРасчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_2 КАК ВТ_2
		|		ПО ВКМ_НачислениеЗарплатыНачисления.Сотрудник = ВТ_2.СотрудникДоп
		|			И ВКМ_НачислениеЗарплатыНачисления.ВидРасчета = ВТ_2.ВидРасчетаДоп
		|ГДЕ
		|	ВКМ_НачислениеЗарплатыНачисления.Ссылка = &Регистратор";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		Движение.ВидРасчета = ВыборкаДетальныеЗаписи.ВидРасчета;
		
		Если ВыборкаДетальныеЗаписи.Результат = Null Тогда
			Движение.Сумма = ВыборкаДетальныеЗаписи.РезультатДоп * 87 / 100;
		Иначе
			Движение.Сумма = ВыборкаДетальныеЗаписи.Результат * 87 / 100;
		КонецЕсли;    
		
	КонецЦикла;

КонецПроцедуры

Процедура ДвиженияУчетОтпусков()

	Движения.ВКМ_УчетОтпусков.Записывать = Истина;   
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_НачислениеЗарплатыНачисления.Сотрудник КАК Сотрудник,
		|	ВКМ_НачислениеЗарплатыНачисления.ДатаОкончания КАК ДатаОкончания,
		|	РАЗНОСТЬДАТ(ВКМ_НачислениеЗарплатыНачисления.ДатаНачала, ВКМ_НачислениеЗарплатыНачисления.ДатаОкончания, ДЕНЬ) + 1 КАК КоличествоДней
		|ИЗ
		|	Документ.ВКМ_НачислениеЗарплаты.Начисления КАК ВКМ_НачислениеЗарплатыНачисления
		|ГДЕ
		|	ВКМ_НачислениеЗарплатыНачисления.Ссылка = &Ссылка
		|	И ВКМ_НачислениеЗарплатыНачисления.ВидРасчета = &ВидРасчета";
	
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпускные);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = Движения.ВКМ_УчетОтпусков.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход; 
		Движение.Период = ВыборкаДетальныеЗаписи.ДатаОкончания;
		Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		Движение.Значение = ВыборкаДетальныеЗаписи.КоличествоДней;
	КонецЦикла;	

КонецПроцедуры

#КонецОбласти     

#КонецЕсли



